[{"D:\\Bootcamp\\project_10-multistep_form\\src\\index.tsx":"1","D:\\Bootcamp\\project_10-multistep_form\\src\\reportWebVitals.ts":"2","D:\\Bootcamp\\project_10-multistep_form\\src\\App.tsx":"3","D:\\Bootcamp\\project_10-multistep_form\\src\\forms\\BasicInfo.tsx":"4","D:\\Bootcamp\\project_10-multistep_form\\src\\forms\\Note.tsx":"5","D:\\Bootcamp\\project_10-multistep_form\\src\\forms\\PersonalInfo.tsx":"6","D:\\Bootcamp\\project_10-multistep_form\\src\\forms\\validationSchema.ts":"7"},{"size":684,"mtime":1611671381120,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1611158084812,"results":"10","hashOfConfig":"9"},{"size":4146,"mtime":1611829091845,"results":"11","hashOfConfig":"9"},{"size":1574,"mtime":1611827938127,"results":"12","hashOfConfig":"9"},{"size":679,"mtime":1611825674756,"results":"13","hashOfConfig":"9"},{"size":4409,"mtime":1611828980868,"results":"14","hashOfConfig":"9"},{"size":1165,"mtime":1611827707991,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"5kjzi9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\Bootcamp\\project_10-multistep_form\\src\\index.tsx",[],["32","33"],"D:\\Bootcamp\\project_10-multistep_form\\src\\reportWebVitals.ts",[],"D:\\Bootcamp\\project_10-multistep_form\\src\\App.tsx",[],"D:\\Bootcamp\\project_10-multistep_form\\src\\forms\\BasicInfo.tsx",[],"D:\\Bootcamp\\project_10-multistep_form\\src\\forms\\Note.tsx",[],"D:\\Bootcamp\\project_10-multistep_form\\src\\forms\\PersonalInfo.tsx",["34"],"import {\r\n  Box,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  InputLabel,\r\n  MenuItem,\r\n  Radio,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { Field, FormikProps } from \"formik\";\r\nimport { CheckboxWithLabel, RadioGroup, Select } from \"formik-material-ui\";\r\nimport { KeyboardDatePicker } from \"formik-material-ui-pickers\";\r\nimport React from \"react\";\r\nimport { FormValues, useStyles } from \"../App\";\r\n\r\ninterface Props {\r\n  helpers: FormikProps<FormValues>;\r\n}\r\n\r\nexport const PersonalInfo: React.FC<Props> = (props) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const smBreak = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const {\r\n    errors,\r\n    setFieldValue,\r\n    touched,\r\n    isSubmitting,\r\n    handleChange,\r\n    values,\r\n  } = props.helpers;\r\n  return (\r\n    <>\r\n      <Typography variant=\"h3\" align=\"center\" component=\"h2\">\r\n        Personal Information\r\n      </Typography>\r\n      <br />\r\n\r\n      <Field\r\n        fullWidth\r\n        component={KeyboardDatePicker}\r\n        name=\"dob\"\r\n        label=\"Date\"\r\n        onChange={(val: string) => setFieldValue(\"dob\", val)}\r\n      />\r\n      <br />\r\n      <br />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        className={classes.threeCols}\r\n        flexDirection={smBreak ? \"column\" : \"row\"}\r\n      >\r\n        <FormControl error={!!(errors.country && touched.country)}>\r\n          <InputLabel htmlFor=\"country\">Country</InputLabel>\r\n          <Field\r\n            component={Select}\r\n            as=\"select\"\r\n            name=\"country\"\r\n            inputProps={{\r\n              id: \"country\",\r\n            }}\r\n          >\r\n            <MenuItem value=\"pk\">Pakistan</MenuItem>\r\n          </Field>\r\n          {errors.country ? (\r\n            <FormHelperText error>{errors.country}</FormHelperText>\r\n          ) : null}\r\n        </FormControl>\r\n        <FormControl error={!!(errors.province && touched.province)}>\r\n          <InputLabel htmlFor=\"province\">Province</InputLabel>\r\n          <Field\r\n            component={Select}\r\n            name=\"province\"\r\n            inputProps={{\r\n              id: \"province\",\r\n            }}\r\n          >\r\n            <MenuItem value={\"sindh\"}>Sindh</MenuItem>\r\n            <MenuItem value={\"Baluchistan\"}>Baluchistan</MenuItem>\r\n            <MenuItem value={\"Punjab\"}>Punjab</MenuItem>\r\n            <MenuItem value={\"KPK\"}>Khyber Pakhtunkhwa</MenuItem>\r\n            <MenuItem value={\"GB\"}>Gilgit Baltistan</MenuItem>\r\n          </Field>\r\n\r\n          {errors.province && touched.province ? (\r\n            <FormHelperText error>{errors.province}</FormHelperText>\r\n          ) : null}\r\n        </FormControl>\r\n\r\n        <FormControl error={!!(errors.city && touched.city)}>\r\n          <InputLabel htmlFor=\"city\">City</InputLabel>\r\n          <Field\r\n            component={Select}\r\n            name=\"city\"\r\n            inputProps={{\r\n              id: \"city\",\r\n            }}\r\n          >\r\n            <MenuItem value={\"karachi\"}>Karachi</MenuItem>\r\n            <MenuItem value={\"lahore\"}>Lahore</MenuItem>\r\n            <MenuItem value={\"peshawar\"}>Peshawar</MenuItem>\r\n            <MenuItem value={\"quetta\"}>Quetta</MenuItem>\r\n            <MenuItem value={\"islamabad\"}>Islamabad</MenuItem>\r\n            <MenuItem value={\"rawalPindi\"}>Rawal Pindi</MenuItem>\r\n            <MenuItem value={\"hyderabad\"}>Hyderabad</MenuItem>\r\n          </Field>\r\n          {errors.city && touched.city ? (\r\n            <FormHelperText error>{errors.city}</FormHelperText>\r\n          ) : null}\r\n        </FormControl>\r\n      </Box>\r\n      <br />\r\n      <Field component={RadioGroup} name=\"gender\" onChange={handleChange}>\r\n        <FormControlLabel\r\n          value=\"male\"\r\n          control={<Radio disabled={isSubmitting} />}\r\n          label=\"Male\"\r\n          disabled={isSubmitting}\r\n        />\r\n        <FormControlLabel\r\n          value=\"female\"\r\n          control={<Radio disabled={isSubmitting} />}\r\n          label=\"Female\"\r\n          disabled={isSubmitting}\r\n        />\r\n        {errors.gender && touched.gender ? (\r\n          <FormHelperText error>{errors.gender}</FormHelperText>\r\n        ) : null}\r\n      </Field>\r\n      <br />\r\n      <Field\r\n        component={CheckboxWithLabel}\r\n        type=\"checkbox\"\r\n        name=\"check\"\r\n        Label={{ label: \"I want to send a message\" }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","D:\\Bootcamp\\project_10-multistep_form\\src\\forms\\validationSchema.ts",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":33,"column":5,"nodeType":"41","messageId":"42","endLine":33,"endColumn":11},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'values' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]